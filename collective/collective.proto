syntax = "proto3";
package endpoints.terrariumai.collective;

// Entity message that is in observations
message Entity {
  // Unique integer identifier of the agent
  string id = 1;
  // Class id
  uint32 classID = 2;
}

// Effects are manipulations of a cell that last a specific amount of time
message Effect {
  // Class
  enum Class {
    NONE = 0;
    PHEROMONE = 1;
  }
  Class classID = 1;
  // Value, used for observation
  uint32 value = 2;
  uint32 strength = 3;
}

// Observation gives data about the agent, and from it's senses
message Observation {
  // Is the agent alive
  bool isAlive = 1;
  // Energy
  uint32 energy = 2;
  // Health
  uint32 health = 3;
  // Id of the agent that is observing
  string id = 4;
  // Senses
  repeated Entity sight = 5;
  repeated Effect smell = 6;
}

// Action is an action to be performed
message Action {
  // Id for the agent that should perform the action
  string id = 1;
  // identifier for the action
  // 0: WAIT
  // 1: MOVE
  // 2: EAT
  uint32 action = 2;
  // direction to perform the action in
  // 0: UP
  // 1: DOWN
  // 2: LEFT
  // 3: RIGHT
  uint32 direction = 3;
}

message ObservationPacket {
  // List of observations for every agent the RM is controlling
  repeated Observation observations = 1;
}

// Request data to create new agent
message ActionPacket {
  // List of actions to be performed
  repeated Action actions = 1;
}

// Service to manage remote models
service Collective {
  // Connect a new RM
  rpc ConnectRemoteModel(stream ActionPacket) returns (stream ObservationPacket) {}
}
