syntax = "proto3";
package endpoints.terrariumai.collective;

// Entity message that is in observations
message Entity {
  // Unique integer identifier of the agent
  string id = 1;
  // Entity stats
  // 0 nothing
  // 1 agent
  // 2 food
  // 3 wall
  uint32 class = 2;
}
// Observation is a list of cells around an agent
message Observation {
  // Is the agent alive
  bool isAlive = 1;
  // Id of the agent that is observing
  string id = 2;
  // List of cells around the agent
  repeated Entity cells = 3;
}
// Action is an action to be performed
message Action {
  // Id for the agent that should perform the action
  string id = 1;
  // identifier for the action
  // 0: WAIT
  // 1: MOVE
  // 2: EAT
  uint32 action = 2;
  // direction to perform the action in
  // 0: UP
  // 1: DOWN
  // 2: LEFT
  // 3: RIGHT
  uint32 direction = 3;
}

message ObservationPacket {
  // List of observations for every agent the RM is controlling
  repeated Observation observations = 1;
}
// Request data to create new agent
message ActionPacket {
  // List of actions to be performed
  repeated Action actions = 1;
}

// Service to manage remote models
service Collective {
  // Connect a new RM
  rpc ConnectRemoteModel(stream ActionPacket) returns (stream ObservationPacket) {}
}
