# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import modelRunner_pb2 as modelRunner__pb2
import shared_pb2 as shared__pb2


class ModelRunnerStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.RunModel = channel.unary_unary(
        '/pb.ModelRunner/RunModel',
        request_serializer=modelRunner__pb2.RunModelMessage.SerializeToString,
        response_deserializer=shared__pb2.Empty.FromString,
        )


class ModelRunnerServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def RunModel(self, request, context):
    """Execute something on data
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_ModelRunnerServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'RunModel': grpc.unary_unary_rpc_method_handler(
          servicer.RunModel,
          request_deserializer=modelRunner__pb2.RunModelMessage.FromString,
          response_serializer=shared__pb2.Empty.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'pb.ModelRunner', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
