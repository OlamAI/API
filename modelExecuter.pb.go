// Code generated by protoc-gen-go. DO NOT EDIT.
// source: modelExecuter.proto

package pb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type LoadModelMessage struct {
	ModelName            string   `protobuf:"bytes,1,opt,name=ModelName,proto3" json:"ModelName,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LoadModelMessage) Reset()         { *m = LoadModelMessage{} }
func (m *LoadModelMessage) String() string { return proto.CompactTextString(m) }
func (*LoadModelMessage) ProtoMessage()    {}
func (*LoadModelMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_da1a827038a3925d, []int{0}
}

func (m *LoadModelMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LoadModelMessage.Unmarshal(m, b)
}
func (m *LoadModelMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LoadModelMessage.Marshal(b, m, deterministic)
}
func (m *LoadModelMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LoadModelMessage.Merge(m, src)
}
func (m *LoadModelMessage) XXX_Size() int {
	return xxx_messageInfo_LoadModelMessage.Size(m)
}
func (m *LoadModelMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_LoadModelMessage.DiscardUnknown(m)
}

var xxx_messageInfo_LoadModelMessage proto.InternalMessageInfo

func (m *LoadModelMessage) GetModelName() string {
	if m != nil {
		return m.ModelName
	}
	return ""
}

type RunModelMessage struct {
	ModelName string `protobuf:"bytes,1,opt,name=ModelName,proto3" json:"ModelName,omitempty"`
	// TODO - Change this to correct object for observations
	Observations         string   `protobuf:"bytes,2,opt,name=Observations,proto3" json:"Observations,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RunModelMessage) Reset()         { *m = RunModelMessage{} }
func (m *RunModelMessage) String() string { return proto.CompactTextString(m) }
func (*RunModelMessage) ProtoMessage()    {}
func (*RunModelMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_da1a827038a3925d, []int{1}
}

func (m *RunModelMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RunModelMessage.Unmarshal(m, b)
}
func (m *RunModelMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RunModelMessage.Marshal(b, m, deterministic)
}
func (m *RunModelMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RunModelMessage.Merge(m, src)
}
func (m *RunModelMessage) XXX_Size() int {
	return xxx_messageInfo_RunModelMessage.Size(m)
}
func (m *RunModelMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_RunModelMessage.DiscardUnknown(m)
}

var xxx_messageInfo_RunModelMessage proto.InternalMessageInfo

func (m *RunModelMessage) GetModelName() string {
	if m != nil {
		return m.ModelName
	}
	return ""
}

func (m *RunModelMessage) GetObservations() string {
	if m != nil {
		return m.Observations
	}
	return ""
}

func init() {
	proto.RegisterType((*LoadModelMessage)(nil), "pb.LoadModelMessage")
	proto.RegisterType((*RunModelMessage)(nil), "pb.RunModelMessage")
}

func init() { proto.RegisterFile("modelExecuter.proto", fileDescriptor_da1a827038a3925d) }

var fileDescriptor_da1a827038a3925d = []byte{
	// 169 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0xce, 0xcd, 0x4f, 0x49,
	0xcd, 0x71, 0xad, 0x48, 0x4d, 0x2e, 0x2d, 0x49, 0x2d, 0xd2, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17,
	0x62, 0x2a, 0x48, 0x92, 0xe2, 0x29, 0xce, 0x48, 0x2c, 0x4a, 0x4d, 0x81, 0x88, 0x28, 0x19, 0x70,
	0x09, 0xf8, 0xe4, 0x27, 0xa6, 0xf8, 0x82, 0x14, 0xfb, 0xa6, 0x16, 0x17, 0x27, 0xa6, 0xa7, 0x0a,
	0xc9, 0x70, 0x71, 0x82, 0xf9, 0x7e, 0x89, 0xb9, 0xa9, 0x12, 0x8c, 0x0a, 0x8c, 0x1a, 0x9c, 0x41,
	0x08, 0x01, 0xa5, 0x60, 0x2e, 0xfe, 0xa0, 0xd2, 0x3c, 0xe2, 0x35, 0x08, 0x29, 0x71, 0xf1, 0xf8,
	0x27, 0x15, 0xa7, 0x16, 0x95, 0x25, 0x96, 0x64, 0xe6, 0xe7, 0x15, 0x4b, 0x30, 0x81, 0x15, 0xa0,
	0x88, 0x19, 0x59, 0x73, 0x71, 0x83, 0x35, 0x04, 0x95, 0xe6, 0xe5, 0xa5, 0x16, 0x09, 0xe9, 0x70,
	0x71, 0xc0, 0xec, 0x10, 0x12, 0xd6, 0x2b, 0x48, 0xd2, 0x43, 0xb3, 0x51, 0x8a, 0x13, 0x24, 0xe8,
	0x9a, 0x5b, 0x50, 0x52, 0xa9, 0xc4, 0x90, 0xc4, 0x06, 0xf6, 0x8a, 0x31, 0x20, 0x00, 0x00, 0xff,
	0xff, 0x2c, 0x3f, 0xbc, 0x24, 0xf3, 0x00, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ModelRunnerClient is the client API for ModelRunner service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ModelRunnerClient interface {
	// Execute something on data
	RunModel(ctx context.Context, in *RunModelMessage, opts ...grpc.CallOption) (*Empty, error)
}

type modelRunnerClient struct {
	cc *grpc.ClientConn
}

func NewModelRunnerClient(cc *grpc.ClientConn) ModelRunnerClient {
	return &modelRunnerClient{cc}
}

func (c *modelRunnerClient) RunModel(ctx context.Context, in *RunModelMessage, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/pb.ModelRunner/RunModel", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ModelRunnerServer is the server API for ModelRunner service.
type ModelRunnerServer interface {
	// Execute something on data
	RunModel(context.Context, *RunModelMessage) (*Empty, error)
}

func RegisterModelRunnerServer(s *grpc.Server, srv ModelRunnerServer) {
	s.RegisterService(&_ModelRunner_serviceDesc, srv)
}

func _ModelRunner_RunModel_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RunModelMessage)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ModelRunnerServer).RunModel(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.ModelRunner/RunModel",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ModelRunnerServer).RunModel(ctx, req.(*RunModelMessage))
	}
	return interceptor(ctx, in, info, handler)
}

var _ModelRunner_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.ModelRunner",
	HandlerType: (*ModelRunnerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "RunModel",
			Handler:    _ModelRunner_RunModel_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "modelExecuter.proto",
}
